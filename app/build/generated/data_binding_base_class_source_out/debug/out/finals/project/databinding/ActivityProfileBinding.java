// Generated by view binder compiler. Do not edit!
package finals.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import finals.project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityProfileBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText GitHub;

  @NonNull
  public final TextView accountInfo;

  @NonNull
  public final EditText bio;

  @NonNull
  public final TextView bioValue;

  @NonNull
  public final EditText collegeEmail;

  @NonNull
  public final Button copyID;

  @NonNull
  public final Button displayInfo;

  @NonNull
  public final TextView email;

  @NonNull
  public final TextView emailValue;

  @NonNull
  public final TextView gitValue;

  @NonNull
  public final TextView help;

  @NonNull
  public final Button hideInfo;

  @NonNull
  public final Button home;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final TextView nameValue;

  @NonNull
  public final TextView navigation;

  @NonNull
  public final EditText newName;

  @NonNull
  public final Button profile;

  @NonNull
  public final Button profilePic;

  @NonNull
  public final TextView profileTitle;

  @NonNull
  public final Button project;

  @NonNull
  public final Button release;

  @NonNull
  public final Button request;

  @NonNull
  public final Button sms;

  @NonNull
  public final Button so;

  @NonNull
  public final Button subBio;

  @NonNull
  public final Button submit;

  @NonNull
  public final Button submitEmail;

  @NonNull
  public final Button submitGit;

  @NonNull
  public final Button update;

  @NonNull
  public final TextView user;

  private ActivityProfileBinding(@NonNull ConstraintLayout rootView, @NonNull EditText GitHub,
      @NonNull TextView accountInfo, @NonNull EditText bio, @NonNull TextView bioValue,
      @NonNull EditText collegeEmail, @NonNull Button copyID, @NonNull Button displayInfo,
      @NonNull TextView email, @NonNull TextView emailValue, @NonNull TextView gitValue,
      @NonNull TextView help, @NonNull Button hideInfo, @NonNull Button home,
      @NonNull LinearLayout layout, @NonNull TextView nameValue, @NonNull TextView navigation,
      @NonNull EditText newName, @NonNull Button profile, @NonNull Button profilePic,
      @NonNull TextView profileTitle, @NonNull Button project, @NonNull Button release,
      @NonNull Button request, @NonNull Button sms, @NonNull Button so, @NonNull Button subBio,
      @NonNull Button submit, @NonNull Button submitEmail, @NonNull Button submitGit,
      @NonNull Button update, @NonNull TextView user) {
    this.rootView = rootView;
    this.GitHub = GitHub;
    this.accountInfo = accountInfo;
    this.bio = bio;
    this.bioValue = bioValue;
    this.collegeEmail = collegeEmail;
    this.copyID = copyID;
    this.displayInfo = displayInfo;
    this.email = email;
    this.emailValue = emailValue;
    this.gitValue = gitValue;
    this.help = help;
    this.hideInfo = hideInfo;
    this.home = home;
    this.layout = layout;
    this.nameValue = nameValue;
    this.navigation = navigation;
    this.newName = newName;
    this.profile = profile;
    this.profilePic = profilePic;
    this.profileTitle = profileTitle;
    this.project = project;
    this.release = release;
    this.request = request;
    this.sms = sms;
    this.so = so;
    this.subBio = subBio;
    this.submit = submit;
    this.submitEmail = submitEmail;
    this.submitGit = submitGit;
    this.update = update;
    this.user = user;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.GitHub;
      EditText GitHub = ViewBindings.findChildViewById(rootView, id);
      if (GitHub == null) {
        break missingId;
      }

      id = R.id.accountInfo;
      TextView accountInfo = ViewBindings.findChildViewById(rootView, id);
      if (accountInfo == null) {
        break missingId;
      }

      id = R.id.bio;
      EditText bio = ViewBindings.findChildViewById(rootView, id);
      if (bio == null) {
        break missingId;
      }

      id = R.id.bioValue;
      TextView bioValue = ViewBindings.findChildViewById(rootView, id);
      if (bioValue == null) {
        break missingId;
      }

      id = R.id.collegeEmail;
      EditText collegeEmail = ViewBindings.findChildViewById(rootView, id);
      if (collegeEmail == null) {
        break missingId;
      }

      id = R.id.copyID;
      Button copyID = ViewBindings.findChildViewById(rootView, id);
      if (copyID == null) {
        break missingId;
      }

      id = R.id.displayInfo;
      Button displayInfo = ViewBindings.findChildViewById(rootView, id);
      if (displayInfo == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.emailValue;
      TextView emailValue = ViewBindings.findChildViewById(rootView, id);
      if (emailValue == null) {
        break missingId;
      }

      id = R.id.gitValue;
      TextView gitValue = ViewBindings.findChildViewById(rootView, id);
      if (gitValue == null) {
        break missingId;
      }

      id = R.id.help;
      TextView help = ViewBindings.findChildViewById(rootView, id);
      if (help == null) {
        break missingId;
      }

      id = R.id.hideInfo;
      Button hideInfo = ViewBindings.findChildViewById(rootView, id);
      if (hideInfo == null) {
        break missingId;
      }

      id = R.id.home;
      Button home = ViewBindings.findChildViewById(rootView, id);
      if (home == null) {
        break missingId;
      }

      id = R.id.layout;
      LinearLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.nameValue;
      TextView nameValue = ViewBindings.findChildViewById(rootView, id);
      if (nameValue == null) {
        break missingId;
      }

      id = R.id.navigation;
      TextView navigation = ViewBindings.findChildViewById(rootView, id);
      if (navigation == null) {
        break missingId;
      }

      id = R.id.newName;
      EditText newName = ViewBindings.findChildViewById(rootView, id);
      if (newName == null) {
        break missingId;
      }

      id = R.id.profile;
      Button profile = ViewBindings.findChildViewById(rootView, id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.profilePic;
      Button profilePic = ViewBindings.findChildViewById(rootView, id);
      if (profilePic == null) {
        break missingId;
      }

      id = R.id.profileTitle;
      TextView profileTitle = ViewBindings.findChildViewById(rootView, id);
      if (profileTitle == null) {
        break missingId;
      }

      id = R.id.project;
      Button project = ViewBindings.findChildViewById(rootView, id);
      if (project == null) {
        break missingId;
      }

      id = R.id.release;
      Button release = ViewBindings.findChildViewById(rootView, id);
      if (release == null) {
        break missingId;
      }

      id = R.id.request;
      Button request = ViewBindings.findChildViewById(rootView, id);
      if (request == null) {
        break missingId;
      }

      id = R.id.sms;
      Button sms = ViewBindings.findChildViewById(rootView, id);
      if (sms == null) {
        break missingId;
      }

      id = R.id.so;
      Button so = ViewBindings.findChildViewById(rootView, id);
      if (so == null) {
        break missingId;
      }

      id = R.id.subBio;
      Button subBio = ViewBindings.findChildViewById(rootView, id);
      if (subBio == null) {
        break missingId;
      }

      id = R.id.submit;
      Button submit = ViewBindings.findChildViewById(rootView, id);
      if (submit == null) {
        break missingId;
      }

      id = R.id.submitEmail;
      Button submitEmail = ViewBindings.findChildViewById(rootView, id);
      if (submitEmail == null) {
        break missingId;
      }

      id = R.id.submitGit;
      Button submitGit = ViewBindings.findChildViewById(rootView, id);
      if (submitGit == null) {
        break missingId;
      }

      id = R.id.update;
      Button update = ViewBindings.findChildViewById(rootView, id);
      if (update == null) {
        break missingId;
      }

      id = R.id.user;
      TextView user = ViewBindings.findChildViewById(rootView, id);
      if (user == null) {
        break missingId;
      }

      return new ActivityProfileBinding((ConstraintLayout) rootView, GitHub, accountInfo, bio,
          bioValue, collegeEmail, copyID, displayInfo, email, emailValue, gitValue, help, hideInfo,
          home, layout, nameValue, navigation, newName, profile, profilePic, profileTitle, project,
          release, request, sms, so, subBio, submit, submitEmail, submitGit, update, user);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
