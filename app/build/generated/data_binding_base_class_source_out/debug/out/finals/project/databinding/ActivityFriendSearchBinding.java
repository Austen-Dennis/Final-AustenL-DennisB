// Generated by view binder compiler. Do not edit!
package finals.project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.SearchView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import finals.project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFriendSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addFriend;

  @NonNull
  public final TextView bioValue;

  @NonNull
  public final TextView emailValue;

  @NonNull
  public final TextView gitValue;

  @NonNull
  public final Button home;

  @NonNull
  public final LinearLayout layout;

  @NonNull
  public final Button messageFriend;

  @NonNull
  public final TextView nameValue;

  @NonNull
  public final Button post;

  @NonNull
  public final Button profile;

  @NonNull
  public final TextView profileTitle;

  @NonNull
  public final Button search;

  @NonNull
  public final SearchView searchView;

  @NonNull
  public final Button sms;

  private ActivityFriendSearchBinding(@NonNull ConstraintLayout rootView, @NonNull Button addFriend,
      @NonNull TextView bioValue, @NonNull TextView emailValue, @NonNull TextView gitValue,
      @NonNull Button home, @NonNull LinearLayout layout, @NonNull Button messageFriend,
      @NonNull TextView nameValue, @NonNull Button post, @NonNull Button profile,
      @NonNull TextView profileTitle, @NonNull Button search, @NonNull SearchView searchView,
      @NonNull Button sms) {
    this.rootView = rootView;
    this.addFriend = addFriend;
    this.bioValue = bioValue;
    this.emailValue = emailValue;
    this.gitValue = gitValue;
    this.home = home;
    this.layout = layout;
    this.messageFriend = messageFriend;
    this.nameValue = nameValue;
    this.post = post;
    this.profile = profile;
    this.profileTitle = profileTitle;
    this.search = search;
    this.searchView = searchView;
    this.sms = sms;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFriendSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFriendSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_friend_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFriendSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addFriend;
      Button addFriend = ViewBindings.findChildViewById(rootView, id);
      if (addFriend == null) {
        break missingId;
      }

      id = R.id.bioValue;
      TextView bioValue = ViewBindings.findChildViewById(rootView, id);
      if (bioValue == null) {
        break missingId;
      }

      id = R.id.emailValue;
      TextView emailValue = ViewBindings.findChildViewById(rootView, id);
      if (emailValue == null) {
        break missingId;
      }

      id = R.id.gitValue;
      TextView gitValue = ViewBindings.findChildViewById(rootView, id);
      if (gitValue == null) {
        break missingId;
      }

      id = R.id.home;
      Button home = ViewBindings.findChildViewById(rootView, id);
      if (home == null) {
        break missingId;
      }

      id = R.id.layout;
      LinearLayout layout = ViewBindings.findChildViewById(rootView, id);
      if (layout == null) {
        break missingId;
      }

      id = R.id.messageFriend;
      Button messageFriend = ViewBindings.findChildViewById(rootView, id);
      if (messageFriend == null) {
        break missingId;
      }

      id = R.id.nameValue;
      TextView nameValue = ViewBindings.findChildViewById(rootView, id);
      if (nameValue == null) {
        break missingId;
      }

      id = R.id.post;
      Button post = ViewBindings.findChildViewById(rootView, id);
      if (post == null) {
        break missingId;
      }

      id = R.id.profile;
      Button profile = ViewBindings.findChildViewById(rootView, id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.profileTitle;
      TextView profileTitle = ViewBindings.findChildViewById(rootView, id);
      if (profileTitle == null) {
        break missingId;
      }

      id = R.id.search;
      Button search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = ViewBindings.findChildViewById(rootView, id);
      if (searchView == null) {
        break missingId;
      }

      id = R.id.sms;
      Button sms = ViewBindings.findChildViewById(rootView, id);
      if (sms == null) {
        break missingId;
      }

      return new ActivityFriendSearchBinding((ConstraintLayout) rootView, addFriend, bioValue,
          emailValue, gitValue, home, layout, messageFriend, nameValue, post, profile, profileTitle,
          search, searchView, sms);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
